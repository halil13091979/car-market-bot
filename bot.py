from telegram import Update, Bot
from telegram.ext import Application, CommandHandler, ContextTypes
import os

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ ID –∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö—ç—à—Ç–µ–≥–æ–≤
def generate_hashtags(data):
    hashtags = []
    for word in data.split():
        if word.isdigit():  # –ï—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–æ–¥ –∏–ª–∏ —Ü–µ–Ω–∞)
            hashtags.append(f"#{word}")
        else:  # –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Ä–∫–∞ –∏–ª–∏ –º–æ–¥–µ–ª—å)
            hashtags.append(f"#{word.capitalize()}")
    return " ".join(hashtags)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
async def add(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ú–∞—Ä–∫–∞, –ú–æ–¥–µ–ª—å, –ì–æ–¥, –¶–µ–Ω–∞")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    ad_text = f"üöó –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç @{user.username or user.first_name}:\n" \
              f"{' '.join(context.args)}"

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö—ç—à—Ç–µ–≥–∏
    hashtags = generate_hashtags(' '.join(context.args))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    bot = Bot(TOKEN)
    await bot.send_message(chat_id=CHANNEL_ID, text=f"{ad_text}\n\n{hashtags}")

    await update.message.reply_text("–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add
    application.add_handler(CommandHandler("add", add))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
